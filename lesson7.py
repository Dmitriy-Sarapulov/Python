# Урок 7. Python: от простого к практике(ООП в пайтон)

class Lada: # Объяление класса класс с Большой буквы
    n_of_wheels = 4 #Атрибуты на уровне класса
    rule = 1

def __init__(self, color,engine): # атрибуты которые будут меняться инит вызывается всегда -это конструктор
    self.color = color # self ссылка на объект атрибут внутри класса
    self.engine = engine

def method(self):
    print(Lada.rule)
    print(self.rule)
    self.rule = 2
    print()
    print()
    print()

def __str__(self):
    return "!"

obj = Lada('red', 'gas')


# использование словарей ограничить, занимают много памяти


#3 принципа ООП Инкапсуляция, полиморфизм и наследование

# Инкапсуляция - сокрытие логики от клиентского кода(инкапсуляция в пайтон, формальная)работает для атрибутов и методов
# 3 типа Атрибутов
# без(_) public
# protected _атрибут атрибут недоступный вне класса(можно, но не нужно, для служебного использования)
# privat __атрибут скрывает компоненты кода.

# Наследование - это передача потомку интерфейса предка (можем вынести методы и атрибуты, что бы не дублировать предка)
# Переопределение - клонирование объекта класса в другом классе(совпадает название метода, но разная логика)
# Переопределение - расширение возможности класса
# Имеет место быть, множественное наследование
# super.classname - запрашивает атрибуты у предка(наследует)

# Полиморфизм(имеющий многие формы) - одинаковые название и разная логика


# именные функции

def first_func(*args): # *args это массив из аргументов(кортеж). **kwargs - словарь
    print(args)
    return args

name = input() # запрос позиционной переменной

print(first_func(10, 20, 30)) # name = name именованная переменная

# запуск скрипта с параметрами

# script_name, first_param, second_param = arg
# print('имя скрипта: ', script_name)
# print('имя первого параметра', first_param)
# print('имя второго параметра', second_param)

# Импорты(import)
# все импорты выполняются строго в начале модуля
# Импортируем не целиком модуль,а отдельные компоненты.
# есть 3 вида импортируемых компонентов
# 1) встроенные(из коробки) - из импортируемой стандартной библиотеки
# 2) сторонние модули, которые вы доустановили
# 3) модули которые мы сами создаём
